{"version":3,"sources":["redux/types.js","components/Todos/Todos.js","redux/actions.js","components/TodoAdd/TodoAdd.js","App.js","redux/todosCounter.js","index.js"],"names":["ADD","DEL","CHNG","connect","state","tds","todos","dispatch","addTodo","todo","type","types","payload","Actions","deleteTodo","index","changeStatus","props","map","id","className","checked","isDone","onChange","style","textDecoration","onClick","event","preventDefault","action","onSubmit","target","inp","value","placeholder","name","required","App","React","Component","initState","remove","tmp","splice","onChangeStatus","store","createStore","serialisedState","localStorage","getItem","JSON","parse","e","console","error","loadFromLocalStorage","subscribe","serializesState","stringify","setItem","saveToLocalStorage","getState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.859fbd9a.chunk.js","sourcesContent":["export const ADD = 'ADD';\nexport const DEL = 'DEL';\nexport const CHNG = 'CHNG';","import {connect} from 'react-redux';\nimport * as Actions from '../../redux/actions'\nimport './Todos.css'\n\nfunction Todos(props) {\n    return (\n        <>\n            {props.tds.map((todo, index) => (\n                <li key={index} id={index}>\n                    <input type='checkbox'\n                           className='checkbox'\n                           checked={props.tds[index].isDone}\n                           onChange={() => props.changeStatus(index)}\n                    />\n                    <span style={{textDecoration: props.tds[index].isDone ? 'line-through' : 'none'}}>\n                        {props.tds[index].todo}\n                    </span>\n                    <button onClick={(event) => {\n                        event.preventDefault();\n                        props.deleteTodo(index)\n                    }} className='removeButton'>REMOVE</button>\n                </li>\n            ))}\n        </>\n    )\n}\n\nfunction mapStateToProps(state){\n    return{\n        tds: state.todos\n    }\n}\n\nfunction mapDispatchToProps(dispatch){\n    return {\n        addTodo: (todo) => dispatch(Actions.add(todo)),\n        deleteTodo: (index) => dispatch(Actions.del(index)),\n        changeStatus: (index) => dispatch(Actions.chng(index))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Todos);","import * as types from './types';\n\nexport function add(todo){\n    return {\n        type: types.ADD,\n        payload: todo\n    }\n}\n\nexport function del(index){\n    return {\n        type: types.DEL,\n        payload: index\n    }\n}\n\nexport function chng(index){\n    return {\n        type: types.CHNG,\n        payload: index\n    }\n}","import React from \"react\";\nimport './TodoAdd.css'\nimport {connect} from 'react-redux';\n\nfunction TodoAdd(props) {\n    return (\n        <div className=\"header\">\n            <form action='#' onSubmit={(event) => {\n                event.preventDefault();\n                props.addTodo({todo: event.target.inp.value, isDone: false});\n                event.target.inp.value = '';\n            }}>\n                <input type='text'\n                       className='headerInput'\n                       placeholder='Type your todo'\n                       name='inp'\n                       id='todoAddInp'\n                       required\n                />\n                <button className='addButton' id='addButton'>ADD</button>\n            </form>\n        </div>\n    )\n}\n\nfunction mapStateToProps(state){\n    return{\n        tds: state.todos\n    }\n}\n\nfunction mapDispatchToProps(dispatch){\n    return {\n        addTodo: (todo) => dispatch({type: 'ADD', payload: todo}),\n        deleteTodo: (id) => dispatch({type: 'DEL', payload: id})\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoAdd);","import React from 'react';\nimport Todos from \"./components/Todos/Todos\";\nimport TodoAdd from \"./components/TodoAdd/TodoAdd\";\nimport './App.css'\n\nexport default class App extends React.Component {\n    render() {\n        return (\n            <div>\n                <TodoAdd/>\n                <hr className='bottomLine'/>\n                <Todos/>\n            </div>\n        )\n    }\n}","import * as types from './types'\n\nconst initState = {\n    todos: []\n}\n\nexport default function todosCounter(state = initState, {type, payload}){\n    switch(type){\n        case types.ADD: return {...state, todos: [...state.todos, payload]};\n        case types.DEL: return {...state, todos: remove(state.todos, payload)};\n        case types.CHNG: return {...state, todos: onChangeStatus(state.todos, payload)}\n        default: return state;\n    }\n}\n\nfunction remove(todos, index){\n    const tmp = [...todos];\n    tmp.splice(index, 1);\n    return tmp;\n}\n\nfunction onChangeStatus(todos, index){\n    const tmp = [...todos];\n    tmp[index].isDone = !tmp[index].isDone;\n    return tmp;\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {createStore} from 'redux';\nimport {Provider} from 'react-redux';\nimport App from \"./App\";\nimport todosCounter from './redux/todosCounter';\n\nconst store = createStore(todosCounter, loadFromLocalStorage());\nstore.subscribe(() => saveToLocalStorage(store.getState()))\n\nReactDOM.render(\n    <Provider store={store}>\n        <div className='container'>\n            <App/>\n        </div>\n    </Provider>,\n    document.getElementById('root'));\n\nfunction saveToLocalStorage(state){\n    try {\n        const serializesState = JSON.stringify(state);\n        localStorage.setItem('todos', serializesState);\n    } catch (e) {\n        console.error(e);\n    }\n}\n\nfunction loadFromLocalStorage(){\n    try{\n        const serialisedState = localStorage.getItem('todos');\n        if(serialisedState === null){\n            return undefined;\n        }else{\n            return JSON.parse(serialisedState);\n        }\n    } catch (e){\n        console.error(e);\n        return undefined;\n    }\n}\n"],"sourceRoot":""}